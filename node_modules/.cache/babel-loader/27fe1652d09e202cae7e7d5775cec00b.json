{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOADING, USER_FAIL, USER_SUCCESS } from '../../../redux/actionsTypes/UserActionTypes';\nimport { API_URLS } from '../../../config';\nimport { UserMapper } from '../../../adapters/secondary/user/mappers/UserMapper';\nexport const getUserInfosUseCase = username => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOADING\n    });\n    const getUserApiUrl = API_URLS.GET_USER.replace('{username}', username);\n    const getUserRepositoriesApiUrl = API_URLS.GET_USER_REPOSITORIES.replace('{username}', username);\n    const user = await axios.get(getUserApiUrl);\n    const repositories = await axios.get(getUserRepositoriesApiUrl);\n    const res = UserMapper.toModel(user.data, repositories.data);\n    dispatch({\n      type: USER_SUCCESS,\n      payload: res\n    });\n  } catch (e) {\n    dispatch({\n      type: USER_FAIL,\n      payload: e.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOADING","USER_FAIL","USER_SUCCESS","API_URLS","UserMapper","getUserInfosUseCase","username","dispatch","type","getUserApiUrl","GET_USER","replace","getUserRepositoriesApiUrl","GET_USER_REPOSITORIES","user","get","repositories","res","toModel","data","payload","e","message"],"sources":["/Users/zakariafatihi/github-dashboard-sample/src/hexagon/usecases/getUserInfos/getUserInfosUseCase.ts"],"sourcesContent":["import { Dispatch } from 'redux';\nimport axios from 'axios';\nimport {\n    UserDispatchTypes,\n    USER_LOADING,\n    USER_FAIL,\n    USER_SUCCESS,\n} from '../../../redux/actionsTypes/UserActionTypes';\nimport { API_URLS } from '../../../config';\nimport { UserMapper } from '../../../adapters/secondary/user/mappers/UserMapper';\n\nexport const getUserInfosUseCase =\n    (username: string): any =>\n    async (dispatch: Dispatch<UserDispatchTypes>) => {\n        try {\n            dispatch({ type: USER_LOADING });\n            const getUserApiUrl = API_URLS.GET_USER.replace('{username}', username);\n            const getUserRepositoriesApiUrl = API_URLS.GET_USER_REPOSITORIES.replace(\n                '{username}',\n                username,\n            );\n            const user = await axios.get(getUserApiUrl);\n            const repositories = await axios.get(getUserRepositoriesApiUrl);\n            const res = UserMapper.toModel(user.data, repositories.data);\n            dispatch({ type: USER_SUCCESS, payload: res });\n        } catch (e: any) {\n            dispatch({ type: USER_FAIL, payload: e.message });\n        }\n    };\n"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEIC,YAFJ,EAGIC,SAHJ,EAIIC,YAJJ,QAKO,6CALP;AAMA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,qDAA3B;AAEA,OAAO,MAAMC,mBAAmB,GAC3BC,QAAD,IACA,MAAOC,QAAP,IAAiD;EAC7C,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAR,CAAD,CAAR;IACA,MAAMS,aAAa,GAAGN,QAAQ,CAACO,QAAT,CAAkBC,OAAlB,CAA0B,YAA1B,EAAwCL,QAAxC,CAAtB;IACA,MAAMM,yBAAyB,GAAGT,QAAQ,CAACU,qBAAT,CAA+BF,OAA/B,CAC9B,YAD8B,EAE9BL,QAF8B,CAAlC;IAIA,MAAMQ,IAAI,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAUN,aAAV,CAAnB;IACA,MAAMO,YAAY,GAAG,MAAMjB,KAAK,CAACgB,GAAN,CAAUH,yBAAV,CAA3B;IACA,MAAMK,GAAG,GAAGb,UAAU,CAACc,OAAX,CAAmBJ,IAAI,CAACK,IAAxB,EAA8BH,YAAY,CAACG,IAA3C,CAAZ;IACAZ,QAAQ,CAAC;MAAEC,IAAI,EAAEN,YAAR;MAAsBkB,OAAO,EAAEH;IAA/B,CAAD,CAAR;EACH,CAXD,CAWE,OAAOI,CAAP,EAAe;IACbd,QAAQ,CAAC;MAAEC,IAAI,EAAEP,SAAR;MAAmBmB,OAAO,EAAEC,CAAC,CAACC;IAA9B,CAAD,CAAR;EACH;AACJ,CAjBE"},"metadata":{},"sourceType":"module"}