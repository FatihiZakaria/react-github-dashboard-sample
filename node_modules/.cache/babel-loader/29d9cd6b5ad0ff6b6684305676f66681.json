{"ast":null,"code":"export class UserMapper {\n  static toModel(userDetailDto, userRepositoriesDto) {\n    const repositories = userRepositoriesDto.map(r => ({\n      id: r.id,\n      name: r.name,\n      language: r.language,\n      stargazers_count: r.stargazers_count,\n      description: r.description,\n      created_at: new Date(r.created_at).toISOString().slice(0, 10),\n      updated_at: new Date(r.updated_at).toISOString().slice(0, 10),\n      html_url: r.html_url\n    }));\n    return {\n      user: {\n        name: userDetailDto.name,\n        avatar_url: userDetailDto.avatar_url\n      },\n      repositories\n    };\n  }\n\n}","map":{"version":3,"names":["UserMapper","toModel","userDetailDto","userRepositoriesDto","repositories","map","r","id","name","language","stargazers_count","description","created_at","Date","toISOString","slice","updated_at","html_url","user","avatar_url"],"sources":["/Users/zakariafatihi/github-dashboard-sample/src/adapters/secondary/user/mappers/UserMapper.ts"],"sourcesContent":["import { UserRepositories, UserType } from '../../../../redux/actionsTypes/UserActionTypes';\nimport { UserDetailDto, UserRepositoriesDto } from '../dtos/userDto';\n\ninterface Mapper<T> {}\nexport class UserMapper implements Mapper<UserType> {\n    static toModel(\n        userDetailDto: UserDetailDto,\n        userRepositoriesDto: UserRepositoriesDto[],\n    ): UserType {\n        const repositories: UserRepositories[] = userRepositoriesDto.map(\n            (r: UserRepositoriesDto) => ({\n                id: r.id,\n                name: r.name,\n                language: r.language,\n                stargazers_count: r.stargazers_count,\n                description: r.description,\n                created_at: new Date(r.created_at).toISOString().slice(0, 10),\n                updated_at: new Date(r.updated_at).toISOString().slice(0, 10),\n                html_url: r.html_url,\n            }),\n        );\n        return {\n            user: {\n                name: userDetailDto.name,\n                avatar_url: userDetailDto.avatar_url,\n            },\n            repositories,\n        };\n    }\n}\n"],"mappings":"AAIA,OAAO,MAAMA,UAAN,CAA6C;EAClC,OAAPC,OAAO,CACVC,aADU,EAEVC,mBAFU,EAGF;IACR,MAAMC,YAAgC,GAAGD,mBAAmB,CAACE,GAApB,CACpCC,CAAD,KAA6B;MACzBC,EAAE,EAAED,CAAC,CAACC,EADmB;MAEzBC,IAAI,EAAEF,CAAC,CAACE,IAFiB;MAGzBC,QAAQ,EAAEH,CAAC,CAACG,QAHa;MAIzBC,gBAAgB,EAAEJ,CAAC,CAACI,gBAJK;MAKzBC,WAAW,EAAEL,CAAC,CAACK,WALU;MAMzBC,UAAU,EAAE,IAAIC,IAAJ,CAASP,CAAC,CAACM,UAAX,EAAuBE,WAAvB,GAAqCC,KAArC,CAA2C,CAA3C,EAA8C,EAA9C,CANa;MAOzBC,UAAU,EAAE,IAAIH,IAAJ,CAASP,CAAC,CAACU,UAAX,EAAuBF,WAAvB,GAAqCC,KAArC,CAA2C,CAA3C,EAA8C,EAA9C,CAPa;MAQzBE,QAAQ,EAAEX,CAAC,CAACW;IARa,CAA7B,CADqC,CAAzC;IAYA,OAAO;MACHC,IAAI,EAAE;QACFV,IAAI,EAAEN,aAAa,CAACM,IADlB;QAEFW,UAAU,EAAEjB,aAAa,CAACiB;MAFxB,CADH;MAKHf;IALG,CAAP;EAOH;;AAxB+C"},"metadata":{},"sourceType":"module"}